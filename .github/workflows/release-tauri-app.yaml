name: "release-tauri-app"
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-[a-z-]+.[0-9]+'

jobs:
  release-tauri-app-linux:
    permissions: write-all
    environment: Relay Release
    outputs:
      releaseId: ${{ steps.build-app.outputs.releaseId }}

    runs-on: ubuntu-22.04
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: 1.77.2

      - name: install Go stable
        uses: actions/setup-go@v4
        with:
          go-version: "stable"

      - name: install dependencies (ubuntu only)
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install and prepare
        run: |
          npm install
          npm run setup:happ-release

      - id: build-app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: Relay-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Relay v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false

  release-tauri-app-android:
    permissions: write-all
    needs: release-tauri-app-linux
    environment: Relay Release

    runs-on: 'ubuntu-22.04' 
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v3

      - name: Extend space
        uses: ./.github/actions/extend-space

      - name: Install nix
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-24.05

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-ci

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-open-dev

      - uses: cachix/cachix-action@v15
        with:
          name: darksoil-studio

      - name: Install and prepare
        run: |
          nix develop --no-update-lock-file --command npm install && npm run setup:happ-release

      - name: setup Android signing
        run: |
          cd src-tauri/gen/android
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" > keystore.properties
          echo "password=${{ secrets.ANDROID_KEY_PASSWORD }}" >> keystore.properties
          base64 -d <<< "${{ secrets.ANDROID_KEY_BASE64 }}" > $RUNNER_TEMP/keystore.jks
          echo "storeFile=$RUNNER_TEMP/keystore.jks" >> keystore.properties

      - name: Build android APKs
        run: |
          nix develop .#androidDev --no-update-lock-file --command bash -c "npm run tauri android build -- --apk --split-per-abi"

      - uses: AButler/upload-release-assets@v3.0
        with:
          files: src-tauri/gen/android/app/build/outputs/apk/*/release/app-*
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-id: ${{ needs.release-tauri-app-linux.outputs.releaseId }}

  release-tauri-app-windows:
    permissions: write-all
    environment: Relay Release

    runs-on: windows-latest
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: 1.77.2

      - name: install Go stable
        uses: actions/setup-go@v4
        with:
          go-version: "stable"

      - name: Install and prepare
        run: |
          npm install
          npm run setup:happ-release

      - name: build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: Relay-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Relay v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false

  release-tauri-app-macos:
    permissions: write-all
    environment: Relay Release

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
          - platform: 'macos-13' # for Intel based macs.
          # - platform: 'ubuntu-22.04' 

    runs-on: ${{ matrix.platform }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: 1.77.2

      - name: install Go stable
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Install and prepare
        run: |
          npm install
          npm run setup:happ-release

      - name: build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: Relay-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Relay v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
